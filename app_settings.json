{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "roles": {
    "program_officer": {
      "name": "Program Officer"
    },
    "chp_supervisor": {
      "name": "Community Health Assistant (CHA)",
      "offline": true
    },
    "chp": {
      "name": "Community Health Promoter (CHP)",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_configure": [
      "program_officer"
    ],
    "can_create_people": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_places": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_records": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_messages": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_edit_profile": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_edit_verification": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_export_all": [
      "program_officer"
    ],
    "can_export_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_update_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "program_officer"
    ],
    "can_verify_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_analytics": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_analytics_tab": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_call_action": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_last_visited_date": [],
    "can_view_uhc_stats": [],
    "can_view_message_action": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_messages": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_reports_tab": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks_tab": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks_group": [
      "chp",
      "chp_supervisor"
    ],
    "can_view_unallocated_data_records": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": [],
    "can_aggregate_targets": [
      "chp_supervisor"
    ],
    "can_upgrade": [
      "program_officer"
    ],
    "can_view_old_filter_and_search": [],
    "can_view_old_action_bar": []
  },
  "contact_types": [
    {
      "id": "area_supervisor_region",
      "icon": "area-supervisor-region",
      "name_key": "contact.type.area_supervisor_region",
      "group_key": "contact.type.area_supervisor_region.plural",
      "create_key": "contact.type.area_supervisor_region.new",
      "edit_key": "contact.type.area_supervisor_region.edit",
      "create_form": "contact:create_chp_supervisor_region",
      "edit_form": "contact:edit_chp_supervisor_region"
    },
    {
      "id": "area_community_health_supervisor",
      "icon": "area-community-health-supervisor",
      "name_key": "contact.type.area_community_health_supervisor",
      "group_key": "contact.type.area_community_health_supervisor.plural",
      "create_key": "contact.type.area_community_health_supervisor.new",
      "edit_key": "contact.type.area_community_health_supervisor.edit",
      "parents": [
        "area_supervisor_region"
      ],
      "create_form": "contact:create_chp_supervisor",
      "edit_form": "contact:edit_chp_supervisor",
      "person": true
    },
    {
      "id": "community_health_unit",
      "icon": "community-health-area",
      "name_key": "contact.type.community_health_unit",
      "group_key": "contact.type.community_health_unit.plural",
      "create_key": "contact.type.community_health_unit.new",
      "edit_key": "contact.type.community_health_unit.edit",
      "create_form": "contact:create_community_health_unit",
      "parents": [
        "area_supervisor_region"
      ],
      "edit_form": "contact:edit_community_health_unit"
    },
    {
      "id": "community_health_volunteer",
      "icon": "community-health-volunteer",
      "name_key": "contact.type.community_health_volunteer",
      "group_key": "contact.type.community_health_volunteer.plural",
      "create_key": "contact.type.community_health_volunteer.new",
      "edit_key": "contact.type.community_health_volunteer.edit",
      "parents": [
        "community_health_unit"
      ],
      "create_form": "contact:create_community_health_volunteer",
      "edit_form": "contact:edit_community_health_volunteer",
      "person": true
    },
    {
      "id": "household",
      "icon": "icon-people-family",
      "name_key": "contact.type.household",
      "group_key": "contact.type.household.plural",
      "create_key": "contact.type.household.new",
      "edit_key": "contact.type.household.edit",
      "parents": [
        "community_health_unit"
      ],
      "create_form": "contact:create_household",
      "edit_form": "contact:edit_household"
    },
    {
      "id": "household_member",
      "icon": "add-member",
      "name_key": "contact.type.household_member",
      "group_key": "contact.type.household_member.plural",
      "create_key": "contact.type.household_member.new",
      "edit_key": "contact.type.household_member.edit",
      "parents": [
        "household"
      ],
      "create_form": "contact:create_household_member",
      "edit_form": "contact:edit_household_member",
      "person": true
    },
    {
      "id": "household_contact",
      "icon": "add-member",
      "name_key": "contact.type.household_contact",
      "group_key": "contact.type.household_contact.plural",
      "parents": [
        "household"
      ],
      "person": true
    }
  ],
  "death_reporting": {
    "mark_deceased_forms": [
      "death_report"
    ],
    "undo_deceased_forms": [
      "undo_death_report"
    ]
  },
  "forms": {},
  "schedules": [],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)('object'==typeof exports?exports:e)[n]=r[n]}}(ContactSummary,(()=>{return e={365:e=>{function t(e){return e?Array.isArray(e)?e:[e]:[]}function r(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function n(e,t,n){if(r(e.appliesIf,n)){var o='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return r(e.appliesIf,n)})).map((function(e){var t={};return i(e,t,'label'),i(e,t,'value'),i(e,t,'translate'),i(e,t,'filter'),i(e,t,'width'),i(e,t,'icon'),e.context&&(t.context={},i(e.context,t.context,'count'),i(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:o}}function i(e,t,r){switch(typeof e[r]){case'undefined':return;case'function':t[r]=e[r](n);break;default:t[r]=e[r]}}}e.exports=function(e,r,o){var i=e.fields||[],f=e.context||{},c=e.cards||[],a=r&&('contact'===r.type?r.contact_type:r.type),s={cards:[],fields:i.filter((function(e){var r=t(e.appliesToType),n=r.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===r.length||r.includes(a)||n.length>0&&!n.includes('!'+a))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return c.forEach((function(e){var r,i,c,p,l=t(e.appliesToType);if(l.includes('report')&&l.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(l.includes('report'))for(r=0;r<o.length;++r)i=o[r],!(p=i)||p.errors&&p.errors.length||(c=n(e,f,i))&&s.cards.push(c);else{if(!l.includes(a)&&l.length>0)return;(c=n(e,f))&&s.cards.push(c)}})),s.context=f,s}},464:(e,t,r)=>{var n=r(972),o=r(365);e.exports=o(n,contact,reports)},972:e=>{e.exports={fields:[],cards:[],context:{}}}},t={},function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}(464);var e,t})); return ContactSummary;",
  "tasks": {
    "rules": "(()=>{var t={202:t=>{function e(t,a){var r=Object.keys(t);for(var o in r){var n=r[o];switch(typeof t[n]){case'object':e(t[n],a);break;case'function':t[n]=t[n].bind(a)}}}function a(t){var e=Object.assign({},t),r=Object.keys(e);for(var o in r){var n=r[o];if(Array.isArray(e[n])){e[n]=e[n].slice(0);for(var i=0;i<e[n].length;++i)'object'==typeof e[n][i]&&(e[n][i]=a(e[n][i]))}else'object'==typeof e[n]&&(e[n]=a(e[n]))}return e}t.exports=function(t){var r={};e(t,r),r.definition=a(t)}},489:(t,e,a)=>{var r=a(202);function o(t,e,a,r,o,n){var i=!!n;if(o.contact){var c='contact'===o.contact.type?o.contact.contact_type:o.contact.type,s=i?n.form:c;if(!(t.appliesToType&&t.appliesToType.indexOf(s)<0)&&(!t.appliesIf||t.appliesIf(o,n)))for(var d=i?n:o.contact,p=function(t,e,a){var r;return r='function'==typeof t.idType?t.idType(e,a):'report'===t.idType?a&&a._id:e.contact&&e.contact._id,Array.isArray(r)||(r=[r]),r}(t,o,n),f=!t.passesIf||!!t.passesIf(o,n),l=function(t,e,a,r){if('function'==typeof t.date)return t.date(a,r)||e.now().getTime();if(void 0===t.date||null===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return r?r.reported_date:a.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,a,o,n),u=t.groupBy&&t.groupBy(o,n),v=0;v<p.length;++v){var y=new e({_id:p[v]+'~'+t.id,contact:o.contact,deleted:!!d.deleted,type:t.id,pass:f,groupBy:u,date:l});t.emitCustom?t.emitCustom(m,y,o,n):m(y)}}function m(t){r('target',t)}}t.exports=function(t,e,a,n,i){for(var c=0;c<t.length;++c){var s=t[c];switch(r(s),s.appliesTo){case'contacts':o(s,n,a,i,e);break;case'reports':for(var d=0;d<e.reports.length;++d){o(s,n,a,i,e,e.reports[d])}break;default:throw new Error('Unrecognised target.appliesTo: '+s.appliesTo)}}}},721:t=>{t.exports={defaultResolvedIf:function(t,e,a,r,o){var n,i;o||(o=Utils);var c=function(t){var e;if(!t||!t.actions)return;return(e=t.actions.find((function(t){return!t.type||'report'===t.type})))&&e.form}(this.definition);if(!c)throw new Error('Could not find the default resolving form!');return n=0,n=e?Math.max(o.addDate(r,-a.start).getTime(),e.reported_date+1):o.addDate(r,-a.start).getTime(),i=o.addDate(r,a.end+1).getTime(),o.isFormSubmittedInWindow(t.reports,c,n,i)}}},845:(t,e,a)=>{var r=a(202),o=a(721);function n(t,e,a,r,o,n){var i;if(t.appliesToType){var c;if('contacts'===t.appliesTo){if(!o.contact)return;c='contact'===o.contact.type?o.contact.contact_type:o.contact.type}else{if(!n)return;c=n.form}if(-1===t.appliesToType.indexOf(c))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(o,n))if('scheduled_tasks'===t.appliesTo){if(n&&t.appliesIf){if(!n.scheduled_tasks)return;for(i=0;i<n.scheduled_tasks.length;i++)t.appliesIf(o,n,i)&&d(i)}}else d();function s(t,e,a){var r;return(r='function'==typeof t.contactLabel?t.contactLabel(e,a):t.contactLabel)?{name:r}:e.contact}function d(i){var c,d,f,l,u=null;for(c=0;c<t.events.length;c++){if((d=t.events[c]).dueDate)u=d.dueDate(d,o,n,i);else if(n)u=void 0!==i?new Date(e.addDate(new Date(n.scheduled_tasks[i].due),d.days)):new Date(e.addDate(new Date(n.reported_date),d.days));else if(d.dueDate)u=d.dueDate(d,o);else{var v=o.contact&&o.contact.reported_date?new Date(o.contact.reported_date):new Date;u=new Date(e.addDate(v,d.days))}e.isTimely(u,d)&&(l={_id:(n?n._id:o.contact&&o.contact._id)+'~'+(d.id||c)+'~'+t.name,deleted:!(!(o.contact&&o.contact.deleted||n)||!n.deleted),doc:o,contact:s(t,o,n),icon:t.icon,date:u,readyStart:d.start||0,readyEnd:d.end||0,title:t.title,resolved:t.resolvedIf(o,n,d,u,i),actions:p(t.actions,d)},void 0!==i&&(l._id+='-'+i),'function'==typeof(f=t.priority)&&(f=f(o,n)),f&&(l.priority=f.level,l.priorityLabel=f.label),r('task',new a(l)))}}function p(e,a){return t.actions.map((function(t){return function(t,e){var a={source:'task',source_id:n?n._id:o.contact&&o.contact._id,contact:o.contact};t.modifyContent&&t.modifyContent(a,o,n,e);return{type:t.type||'report',form:t.form,label:t.label||'Follow up',content:a}}(t,a)}))}}t.exports=function(t,e,a,i,c){if(t)for(var s,d,p=0;p<t.length;++p)switch('function'!=typeof(s=Object.assign({},t[p],o)).resolvedIf&&(s.resolvedIf=function(t,e,r,o){return s.defaultResolvedIf(t,e,r,o,a)}),r(s),s.appliesTo){case'reports':case'scheduled_tasks':for(var f=0;f<e.reports.length;++f)d=e.reports[f],n(s,a,i,c,e,d);break;case'contacts':e.contact&&n(s,a,i,c,e);break;default:throw new Error('Unrecognised task.appliesTo: '+s.appliesTo)}}},931:t=>{t.exports=[]},991:t=>{t.exports=[]}},e={};function a(r){var o=e[r];if(void 0!==o)return o.exports;var n=e[r]={exports:{}};return t[r](n,n.exports,a),n.exports}var r=a(991),o=a(931),n=a(845);a(489)(o,c,Utils,Target,emit),n(r,c,Utils,Task,emit),emit('_complete',{_id:!0})})();",
    "isDeclarative": true,
    "targets": {
      "enabled": true,
      "items": []
    }
  }
}
